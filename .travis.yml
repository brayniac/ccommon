sudo: required
language: c
dist: xenial

# using anchor to import sources into linux builds
addons:
  apt: &apt
    sources:
      - ubuntu-toolchain-r-test

# important for allowed-to-fail matching
# see https://docs.travis-ci.com/user/customizing-the-build#Rows-that-are-Allowed-to-Fail
env:
  - ALLOWED_TO_FAIL=0

# travis currently does not support directly setting gcc/clang with versions
# (e.g. gcc-4.8) as value for the compiler key. So we will have to manually
# request these packages and use environment varibles to create the matrix.
matrix:
  include:
    - name: "gcc-5 on Linux"
      compiler: gcc
      addons:
        apt:
          <<: *apt
          packages:
            - libsubunit-dev

    - name: "gcc-6 on Linux"
      script:
        - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        - sudo apt-get update -y
        - sudo apt-get install gcc-6 g++-6 -y
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 60 --slave /usr/bin/g++ g++ /usr/bin/g++-6
        - sudo update-alternatives --config gcc
        - ./ci/run.sh

    - name: "gcc-7 on Linux"
      script:
        - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        - sudo apt-get update -y
        - sudo apt-get install gcc-7 g++-7 -y
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-7
        - sudo update-alternatives --config gcc
        - ./ci/run.sh

    - name: "gcc-8 on Linux"
      script:
        - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        - sudo apt-get update -y
        - sudo apt-get install gcc-8 g++-8 -y
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 --slave /usr/bin/g++ g++ /usr/bin/g++-8
        - sudo update-alternatives --config gcc
        - ./ci/run.sh

    - name: "gcc-9 on Linux"
      script:
        - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        - sudo apt-get update -y
        - sudo apt-get install gcc-9 g++-9 -y
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-9
        - sudo update-alternatives --config gcc
        - ./ci/run.sh

    - name: "gcc-5 on Linux, Rust enabled"
      compiler: gcc
      env:
        - RUST_ENABLED=1
      addons:
        apt:
          <<: *apt
          packages:
            - libsubunit-dev

    - name: "gcc-6 on Linux, Rust enabled"
      env: RUST_ENABLED=1
      script:
        - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        - sudo apt-get update -y
        - sudo apt-get install gcc-6 g++-6 -y
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 60 --slave /usr/bin/g++ g++ /usr/bin/g++-6
        - sudo update-alternatives --config gcc
        - ./ci/run.sh

    - name: "gcc-7 on Linux, Rust enabled"
      env: RUST_ENABLED=1
      script:
        - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        - sudo apt-get update -y
        - sudo apt-get install gcc-7 g++-7 -y
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-7
        - sudo update-alternatives --config gcc
        - ./ci/run.sh

    - name: "gcc-8 on Linux, Rust enabled"
      env: RUST_ENABLED=1
      script:
        - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        - sudo apt-get update -y
        - sudo apt-get install gcc-8 g++-8 -y
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 --slave /usr/bin/g++ g++ /usr/bin/g++-8
        - sudo update-alternatives --config gcc
        - ./ci/run.sh

    - name: "gcc-9 on Linux, Rust enabled"
      env: RUST_ENABLED=1
      script:
        - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        - sudo apt-get update -y
        - sudo apt-get install gcc-9 g++-9 -y
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-9
        - sudo update-alternatives --config gcc
        - ./ci/run.sh

    - os: osx
      osx_image: xcode10.1
      compiler: clang

  allow_failures:
    - os: osx
      osx_image: xcode10.1
      compiler: clang

before_install:
  - ./ci/before-install.sh

script:
  - ./ci/run.sh
